import { GraphQLSchemaConfig } from 'graphql';
import { GraphQLAstExplorer } from './graphql-ast.explorer';
import { GraphQLSchemaBuilder } from './graphql-schema-builder';
import { GqlModuleOptions } from './interfaces';
import {
  ScalarsExplorerService,
  DelegatesExplorerService,
  ResolversExplorerService,
} from './services';
export declare class GraphQLFactory {
  private readonly resolversExplorerService;
  private readonly delegatesExplorerService;
  private readonly scalarsExplorerService;
  private readonly graphqlAstExplorer;
  private readonly gqlSchemaBuilder;
  constructor(
    resolversExplorerService: ResolversExplorerService,
    delegatesExplorerService: DelegatesExplorerService,
    scalarsExplorerService: ScalarsExplorerService,
    graphqlAstExplorer: GraphQLAstExplorer,
    gqlSchemaBuilder: GraphQLSchemaBuilder,
  );
  mergeOptions(options?: GqlModuleOptions): Promise<GqlModuleOptions>;
  overrideOrExtendResolvers(
    executableSchemaConfig: GraphQLSchemaConfig,
    autoGeneratedSchemaConfig: GraphQLSchemaConfig,
  ): GraphQLSchemaConfig;
  createDelegates(): (mergeInfo: any) => any;
  generateDefinitions(typeDefs: string | string[], options: GqlModuleOptions): Promise<void>;
}
